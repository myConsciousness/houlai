/*
 * Copyright 2020 Kato Shinya.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

import io.franzbecker.gradle.lombok.task.DelombokTask

plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'com.palantir.git-version' version '0.12.3'
    id 'io.franzbecker.gradle-lombok' version '4.0.0'
	id 'java'
}

group = 'org.thinkit.houlai'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
    maven {
        name = 'GitHubPackages'
        url = uri('https://maven.pkg.github.com/myConsciousness/houlai')
        credentials {
            username = System.getenv('GITHUB_USER')
            password = System.getenv('GITHUB_DOWNLOAD_PACKAGE_TOKEN')
        }
    }

    jcenter()
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'
    implementation 'org.springframework.security:spring-security-web'
    implementation 'org.springframework.security:spring-security-config'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

    implementation 'org.thinkit.api.catalog:catalog-api:v1.0.2'
    implementation 'org.thinkit.framework.envali:entity-validator:v1.0.3'
    implementation 'org.thinkit.framework.content:content-framework:v1.0.5'
	implementation 'org.thinkit.generator.catalog.engine:catalog-generator-engine:v1.0.0'
}

test {
    useJUnitPlatform()

    testLogging {
        showStandardStreams true
        events 'started', 'skipped', 'passed', 'failed'
        exceptionFormat 'full'
    }
}

lombok {
    version = "1.18.16"
}

task delombok( type: DelombokTask ) {
    description = 'Generates delomboked source.'

    sourceSets.all {
        if ( it.name != SourceSet.TEST_SOURCE_SET_NAME ) {
            it.allJava.srcDirs.each {
                args( it, '-d', "${buildDir}/${delombok.name}" )
            }
        }
    }
}

javadoc {
    dependsOn delombok

    source = file( "${buildDir}/${delombok.name}" )
    title = 'Houlai'
    options.links('https://docs.oracle.com/en/java/javase/13/docs/api/')
    options.charSet("utf-8")
    options.showFromPublic()
    destinationDir = file('./docs')
}
